apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: mongodb-sink-connect-cluster
  annotations:
    strimzi.io/use-connector-resources: "true"
spec:
  version: 3.1.0
  replicas: 1
  bootstrapServers: bitnami-kafka.infra.svc.cluster.local:9092
  # logging:
  #   type: inline
  #   loggers:
  #     connect.root.logger.level: "INFO"
  config:
    config.providers: secrets
    config.providers.secrets.class: io.strimzi.kafka.KubernetesSecretConfigProvider
    key.converter: org.apache.kafka.connect.json.JsonConverter
    value.converter: org.apache.kafka.connect.json.JsonConverter
    key.converter.schemas.enable: true
    value.converter.schemas.enable: true
    group.id: mongodb-sink-connect-cluster
    offset.storage.topic: mongodb-sink-connect-cluster-offsets
    config.storage.topic: mongodb-sink-connect-cluster-configs
    status.storage.topic: mongodb-sink-connect-cluster-status
    # -1 means it will use the default replication factor configured in the broker
    config.storage.replication.factor: -1
    offset.storage.replication.factor: -1
    status.storage.replication.factor: -1
  build:
    output:
      type: docker
      image: registry.jingtao.fun/sink-connect-mongodb:v2  # ensure you can push the image.
    plugins:
      - name: mongodb-connector
        artifacts:
          - type: zip
            url: https://d1i4a15mxbxib1.cloudfront.net/api/plugins/mongodb/kafka-connect-mongodb/versions/1.8.0/mongodb-kafka-connect-mongodb-1.8.0.zip
